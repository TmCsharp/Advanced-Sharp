using System;

namespace SoftUniParking;

public class StartUp
{
    static void Main(string[] args)
    {
        var car = new Car("Skoda", "Fabia", 65, "CC1856BG");
        var car2 = new Car("Audi", "A3", 110, "EB8787MN");

        Console.WriteLine(car.ToString());
        //Make: Skoda
        //Model: Fabia
        //HorsePower: 65
        //RegistrationNumber: CC1856BG

        var parking = new Parking(5);
        Console.WriteLine(parking.AddCar(car));
        //Successfully added new car Skoda CC1856BG

        Console.WriteLine(parking.AddCar(car));
        //Car with that registration number, already exists!

        Console.WriteLine(parking.AddCar(car2));
        //Successfully added new car Audi EB8787MN

        Console.WriteLine(parking.GetCar("EB8787MN").ToString());
        //Make: Audi
        //Model: A3
        //HorsePower: 110
        //RegistrationNumber: EB8787MN

        Console.WriteLine(parking.RemoveCar("EB8787MN"));
        //Successfullyremoved EB8787MN

        Console.WriteLine(parking.Count); //1
    }
}



﻿using System.Collections.Generic;

namespace SoftUniParking;

public class Parking
{
    private Dictionary<string, Car> cars;
    private int capacity;

    public Parking(int capacity)
    {
        this.capacity = capacity;
        cars = new();
    }

    public int Count { get { return this.cars.Count; } }

    public string AddCar(Car car)
    {
        if (cars.ContainsKey(car.RegistrationNumber))
        {
            return "Car with that registration number, already exists!";
        }

        if (cars.Count == capacity)
        {
            return "Parking is full!";
        }

        this.cars.Add(car.RegistrationNumber, car);

        return $"Successfully added new car {car.Make} {car.RegistrationNumber}";
    }

    public Car GetCar(string registrationNumber)
    {
        return cars[registrationNumber];
    }

    public string RemoveCar(string registrationNumber)
    {
        if (!cars.ContainsKey(registrationNumber))
        {
            return "Car with that registration number, doesn't exist!";
        }

        cars.Remove(registrationNumber);

        return $"Successfully removed {registrationNumber}";
    }

    public void RemoveSetOfRegistrationNumber(List<string> registrationNumbers)
    {
        foreach (var registrationNumber in registrationNumbers)
        {
            RemoveCar(registrationNumber);
        }
    }
}
